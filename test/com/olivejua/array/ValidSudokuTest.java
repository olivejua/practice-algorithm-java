package com.olivejua.array;

import org.assertj.core.api.Assertions;
import org.junit.Test;

public class ValidSudokuTest {
    private final ValidSudoku problem = new ValidSudoku();

    @Test
    public void test1() {
        char[][] board = {
                {'5','3','.','.','7','.','.','.','.'}
                ,{'6','.','.','1','9','5','.','.','.'}
                ,{'.','9','8','.','.','.','.','6','.'}
                ,{'8','.','.','.','6','.','.','.','3'}
                ,{'4','.','.','8','.','3','.','.','1'}
                ,{'7','.','.','.','2','.','.','.','6'}
                ,{'.','6','.','.','.','.','2','8','.'}
                ,{'.','.','.','4','1','9','.','.','5'}
                ,{'.','.','.','.','8','.','.','7','9'}};

        boolean result = problem.isValidSudoku(board);

        Assertions.assertThat(result).isEqualTo(true);
    }

    @Test
    public void test2() {
        char[][] board = {
                {'8','3','.','.','7','.','.','.','.'}
                ,{'6','.','.','1','9','5','.','.','.'}
                ,{'.','9','8','.','.','.','.','6','.'}
                ,{'8','.','.','.','6','.','.','.','3'}
                ,{'4','.','.','8','.','3','.','.','1'}
                ,{'7','.','.','.','2','.','.','.','6'}
                ,{'.','6','.','.','.','.','2','8','.'}
                ,{'.','.','.','4','1','9','.','.','5'}
                ,{'.','.','.','.','8','.','.','7','9'}};

        boolean result = problem.isValidSudoku(board);

        Assertions.assertThat(result).isEqualTo(false);
    }

    @Test
    public void test3() {
        char[][] board = {
                 {'.','.','4','.','.','.','6','3','.'}
                ,{'.','.','.','.','.','.','.','.','.'}
                ,{'5','.','.','.','.','.','.','9','.'}
                ,{'.','.','.','5','6','.','.','.','.'}
                ,{'4','.','3','.','.','.','.','.','1'}
                ,{'.','.','.','7','.','.','.','.','.'}
                ,{'.','.','.','5','.','.','.','.','.'}
                ,{'.','.','.','.','.','.','.','.','.'}
                ,{'.','.','.','.','.','.','.','.','.'}};

        boolean result = problem.isValidSudoku(board);

        Assertions.assertThat(result).isEqualTo(false);
    }
}